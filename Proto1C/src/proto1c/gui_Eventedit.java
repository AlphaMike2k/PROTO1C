/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proto1c;

import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Michael
 */
public class gui_Eventedit extends javax.swing.JFrame {

    /**
     * Creates new form gui_Eventedit
     */
    public gui_Eventedit() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        editsave = new javax.swing.JButton();
        editcancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        edit_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        edit_day = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        edit_month = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        edit_year = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        edit_hour = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        edit_min = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editsave.setText("Save");
        editsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editsaveActionPerformed(evt);
            }
        });

        editcancel.setText("Cancel");
        editcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editcancelActionPerformed(evt);
            }
        });

        jLabel1.setText("Event Name:");

        edit_name.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        edit_name.setText("Name");
        edit_name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit_nameMouseClicked(evt);
            }
        });

        jLabel2.setText("Event Date:");

        edit_day.setText("DD");
        edit_day.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit_dayMouseClicked(evt);
            }
        });

        jLabel5.setText("/");

        edit_month.setText("MM");
        edit_month.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit_monthMouseClicked(evt);
            }
        });

        jLabel4.setText("/");

        edit_year.setText("YYYY");
        edit_year.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit_yearMouseClicked(evt);
            }
        });

        jLabel3.setText("Event Time:");

        edit_hour.setText("HH");
        edit_hour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit_hourMouseClicked(evt);
            }
        });

        jLabel6.setText(":");

        edit_min.setText("MM");
        edit_min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit_minMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addComponent(editsave)
                .addGap(18, 18, 18)
                .addComponent(editcancel)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(edit_name, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(edit_day, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edit_month, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edit_year, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(edit_hour, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edit_min, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edit_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editsave)
                    .addComponent(editcancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editsaveActionPerformed
        // TODO add your handling code here:
        final int reqFields = 6;
        int validFields = 0;
        String errorMessage = "";
        
        //Validation to ensure entered fields are correct.
        if(edit_name.getText().equalsIgnoreCase("Name")||edit_name.getText().isEmpty()){
            errorMessage = errorMessage.concat("Name field is missing.\n");
        }else{
            String aName = edit_name.getText();
            validFields++;
        }
        
        //Ensure Month field is correct
        if(edit_month.getText().equalsIgnoreCase("MM")||edit_month.getText().isEmpty()){
            errorMessage = errorMessage.concat("Month field is missing.\n");
        }else{
            //Attempt to ensure month is valid and is a number
            try{
                int mm = Integer.parseInt(edit_month.getText());
                if(mm <=0 || mm >12){
                       errorMessage = errorMessage.concat("Month not valid.\n");
               }else{
                   aMonth = mm;
                   validFields++;
               }
            } catch(NumberFormatException e){
                errorMessage = errorMessage.concat("Month is not a valid number.\n");
            }
        }
        
        //Ensure Year field is correct
        if(edit_year.getText().equalsIgnoreCase("YYYY")||edit_year.getText().isEmpty()){
            errorMessage = errorMessage.concat("Year field is missing.\n");
        }else{
            //Attempt to ensure month is valid and is a number
            try{
                int yy = Integer.parseInt(edit_year.getText());
                if(yy < 2019 || yy > 2099 ){
                       errorMessage = errorMessage.concat("Month not valid.\n");
               }else{
                   aYear = yy;
                   validFields++;
               }
            } catch(NumberFormatException e){
                errorMessage = errorMessage.concat("Month is not a valid number.\n");
            }
        }      
        
        //Ensure Day field is filled
        if(edit_day.getText().equalsIgnoreCase("DD")||edit_day.getText().isEmpty()){
            errorMessage = errorMessage.concat("Day field is missing.\n");
        }else{
            //Attempt to ensure day is valid and is a number
            try{
               int dd = Integer.parseInt(edit_day.getText());
               if(dd <=0 || dd >31){
                    errorMessage = errorMessage.concat("Day not valid.\n");
                }else{
                    aDay = dd;
                    validFields++;
                }
            } catch(NumberFormatException e){
                errorMessage = errorMessage.concat("Day is not a valid number.\n");
            }
        }
        
          //Ensure hour field is correct
          if(edit_hour.getText().equalsIgnoreCase("HH")||edit_hour.getText().isEmpty()){
            errorMessage = errorMessage.concat("Hour field is missing.\n");
        }else{
            //Attempt to ensure hour is valid and is a number
            try{
               int hh = Integer.parseInt(edit_hour.getText());
               if(hh < 0 || hh > 24){
                    errorMessage = errorMessage.concat("Hour not valid.\n");
                }else{
                    aHour = hh;
                    validFields++;
                }
            } catch(NumberFormatException e){
                errorMessage = errorMessage.concat("Hour is not a valid number.\n");
            }
        }
          
            //Ensure Minute field is correct
          if(edit_min.getText().equalsIgnoreCase("MM")||edit_min.getText().isEmpty()){
            errorMessage = errorMessage.concat("Minute field is missing.\n");
        }else{
            //Attempt to ensure hour is valid and is a number
            try{
               int min = Integer.parseInt(edit_min.getText());
               if(min < 00 || min > 59){
                    errorMessage = errorMessage.concat("Hour not valid.\n");
                }else{
                    aMinute = min;
                    validFields++;
                }
            } catch(NumberFormatException e){
                errorMessage = errorMessage.concat("Minute is not a valid number.\n");
            }
        }
                
        //Ensure the fields are valid to avoid error message
        if (validFields < reqFields){
            JOptionPane.showMessageDialog(null, errorMessage,"Invalid Fields", JOptionPane.ERROR_MESSAGE);
        }else{
        
       // System.out.println(aName);
        //System.out.println(aDate);
        //System.out.println(aTime);
          JOptionPane.showMessageDialog(null, "Event has been created.", "Event Created", JOptionPane.INFORMATION_MESSAGE);
          aDate = (aDay + aMonth + aYear);
          aTime = (aHour + aMinute);        
          SimpleDateFormat df = new SimpleDateFormat("DD/MM/YYYY");
          SimpleDateFormat tf = new SimpleDateFormat("kk:mm");
          String date = df.format(aDate);
          String time = tf.format(Integer.valueOf(aTime));
        }
    }//GEN-LAST:event_editsaveActionPerformed

    private void edit_nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_nameMouseClicked
        // TODO add your handling code here:
        edit_name.setText("");
    }//GEN-LAST:event_edit_nameMouseClicked

    private void edit_dayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_dayMouseClicked
        // TODO add your handling code here:
        edit_day.setText("");
    }//GEN-LAST:event_edit_dayMouseClicked

    private void edit_monthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_monthMouseClicked
        // When clicked on field automatically becomes empty.
        edit_month.setText("");
    }//GEN-LAST:event_edit_monthMouseClicked

    private void edit_yearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_yearMouseClicked
        // When clicked on field automatically becomes empty.
        edit_year.setText("");
    }//GEN-LAST:event_edit_yearMouseClicked

    private void edit_hourMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_hourMouseClicked
        // When clicked on field automatically becomes empty.
        edit_hour.setText("");
    }//GEN-LAST:event_edit_hourMouseClicked

    private void edit_minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_minMouseClicked
        // TODO add your handling code here:
        edit_min.setText("");
    }//GEN-LAST:event_edit_minMouseClicked

    private void editcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editcancelActionPerformed
        //Closes when canceled
        this.dispose();
    }//GEN-LAST:event_editcancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui_Eventedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui_Eventedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui_Eventedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui_Eventedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui_Eventedit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField edit_day;
    private javax.swing.JTextField edit_hour;
    private javax.swing.JTextField edit_min;
    private javax.swing.JTextField edit_month;
    private javax.swing.JTextField edit_name;
    private javax.swing.JTextField edit_year;
    private javax.swing.JButton editcancel;
    private javax.swing.JButton editsave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPopupMenu jPopupMenu1;
    // End of variables declaration//GEN-END:variables

    private String aName;
    private int aDay;
    private int aMonth;
    private int aYear;
    private int aHour;
    private int aMinute;
    private int aTime;
    private int aDate;
   
}
